<div ##{addWorkId}>
  <b-alert v-bind:show="show_alert" variant="danger" dismissible @dismissed="reset">
    This work is already in the database. View it <a v-bind:href=`/work/${work_id}`>here</a>.
  <b-form v-on:submit.prevent="add_work" v-on:reset.prevent="reset" novalidate>
    <b-form-group>
      <b-form-group label-for="piece-url" label="URL">
        <b-form-input
          type="url"
          #piece-url
          v-model.trim="url"
          placeholder="URL"
          autofocus
          autocomplete="on"
          v-bind:formatter="decodeURI"
          >
        <template v-slot:description>If the piece is on <a href="https://imslp.org/wiki/Main_Page">IMSLP</a>, enter its url and we'll autofill the rest. Otherwise, leave this blank.
      <b-form-group v-bind:validated="validated">
        <b-form-row>
          <b-form-group label-for="piece-title" label="Title" .col>
            <b-form-input
              type="text"
              autocomplete="off"
              #piece-title
              v-model.trim="title"
              placeholder="Title"
              required
              >
          <b-form-group label-for="piece-composer" label="Composer" .col>
            <autocomplete
              required
              ref="autocomplete"
              #piece-composer
              @submit="autocompleteSubmit"
              placeholder="Composer"
              auto-select
              v-bind:debounce-time="300"
              v-bind:get-result-value="result => result.label"
              v-bind:search="search"
              >
            <template v-slot:description>Enter the composer as <em>last-name</em>, <em>first-name</em> <em>middle-name</em>.
        <b-form-row>
          <b-form-group label-for="piece-movements" label="Movements" .col>
            <b-input-group v-for="(movement, i) in work_movements" v-bind:key="i" v-bind:prepend="`${i+1}`" #piece-movements>
              <b-form-input v-model.trim="work_movements[i]" v-bind:spellcheck="false" autocomplete="off">
              <b-input-group-append>
                <b-button tabindex="-1" variant="outline-secondary" @click="work_movements.splice(i, 1)">x
            <b-button @click="work_movements.splice(work_movements.length, 0, '')"
              block size="md" variant="outline-secondary">Add movement
          <b-form-group .col>
            <label #instrumentation-label for="piece-instrumentation">Instrumentation <span style='color: #007bff'>(?)</span>
            <b-form-tags
              v-bind:state="validated ? instrumentation.length > 0 : null"
              ref="instrumentationInput"
              v-model="instrumentation"
              input-id="piece-instrumentation"
              placeholder=""
              remove-on-delete
              separator=",;"
              v-bind:tag-validator="validatePart"
              invalid-tag-text="Unsupported part"
              duplicate-tag-text="Part already entered"
              >
            <b-form-invalid-feedback>Piece must have at least one part
            <b-popover #instrumentation-info triggers="hover" noninteractive target="instrumentation-label">
                <template v-slot:title>
                Enter string parts separated by commas, ex. #
                <kbd>violin, violin 1, tutti violin 2, viola, cello, bass
                \. Instruments not preceded by a #
                <kbd>solo
                \ or #
                <kbd>tutti
                \ default to solo parts. For convenience, you can use #
                <kbd>strings
                \ to refer to a standard orchestral string section and #
                <kbd>quartet
                \ for a string quartet.
      $maybe _ <- user_id
        <b-form-group>
            <b-button variant="primary" type="submit">Add work to database
            <b-button variant="secondary" type="reset">Clear
      $nothing
        <p>You must be logged in to upload a work to the database. <a href=@{AuthR LoginR}>Login or sign up here.</a>
  <b-overlay v-bind:show="loading" rounded="sm" no-wrap fixed>
